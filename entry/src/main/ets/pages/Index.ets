import preferenceUtil from '../utils/PreferencesUtil'
import constantUtil from '../utils/ConstantUtil'
import { MainPage } from './MainPage'
import { SplashPage } from './SplashPage'
import { LogUtil, RouterUtil } from 'librarycommon'

/**
 * 输入page快速创建页面
 * 闪屏页 -- 最先显示
 */
@Preview
@Entry
@Component
struct Index {
  @State @Watch("onSplashPageFinish") isSplash : boolean = true

  onSplashPageFinish() {
    //启动页结束后进行操作，如请求网络等
    LogUtil.error(this.isSplash)
  }

  aboutToAppear() {

    //AppStorage.setOrCreate(constantUtil.PATH_STACK, this.pathStack)
    preferenceUtil.getPreferences(getContext())

    /*setTimeout(() => {
      let url = 'pages/login/LoginPage'

      preferenceUtil.getString(constantUtil.TOKEN)
        .then((data) => {
          if (data) {
            AppGlobalContext.getContext().setValue(constantUtil.TOKEN, data)
            url = 'pages/MainPage'
          }
        })
        .catch((err: string) => {
          toastUtil.show(err)
        })
        .finally(() => {
          this.startPage(url)
        })

    }, 1000)*/
  }

  build() {
      Navigation(RouterUtil.navPathStack) {
        Column() {
          //this.PagesMap(this.name)
          if(this.isSplash){
            SplashPage({isSplash: this.isSplash})
          }else {
            MainPage()
          }
        }
      }

      .height('100%')
      .hideTitleBar(true)
      .navBarWidth('50%')
      // .navDestination(this.pageMap)

      // .hideNavBar(false)
      // .toolbarConfiguration(this.tabBuilder)
    }


  //.mode(NavigationMode.Stack)
  //}

  /*startPage(url: string) {
    this.pathStack.pushPathByName(url, null,(info)=>{
      LogUtil.error(info.result.toString())
      this.startPage(info.result.toString())
    },true)
    //router.pushUrl({ url })
  }*/
}